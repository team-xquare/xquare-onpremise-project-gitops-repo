{{- $fullname := (printf "%s-%s" .Values.name .Values.environment) }}
{{- $namespace := (printf "%s-%s" .Values.project .Values.environment) }}
{{- $ecrRegistry := "786584124104.dkr.ecr.ap-northeast-2.amazonaws.com" }}

{{- if .Values.imageTag }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ $namespace }}
  name: {{ $fullname }}
  labels:
    app.kubernetes.io/name: {{ $fullname }}
    app.kubernetes.io/part-of: {{ .Values.name }}
    app.kubernetes.io/environment: {{ .Values.environment }}
    app.kubernetes.io/project: {{ .Values.project }}
spec:
  {{- if eq .Values.criticalService true }}
  replicas: 2
  {{- else }}
  replicas: 1
  {{- end }}
  revisionHistoryLimit: 0
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $fullname }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "false"
        sidecar.istio.io/proxyCPU: "5m"
        sidecar.istio.io/proxyMemory: "128Mi"
        admission.datadoghq.com/enabled: "true"
        {{- if eq .Values.language "java" }}
#        admission.datadoghq.com/java-lib.version: v1.49.0
        instrumentation.opentelemetry.io/inject-java: "true"
        {{- end }}
        {{- if eq .Values.language "nodejs" }}
        instrumentation.opentelemetry.io/inject-nodejs: "true"
#        admission.datadoghq.com/js-lib.version: v5.52.0
        {{- end }}
      labels:
        app.kubernetes.io/name: {{ $fullname }}
        app.kubernetes.io/part-of: {{ .Values.name }}
        app.kubernetes.io/project: {{ .Values.project }} 
        admission.datadoghq.com/enabled: "true"
    spec:
      serviceAccountName: {{ $namespace }}-vault-service-account
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - {{ $fullname }}
              topologyKey: "kubernetes.io/hostname"
      {{- if eq $fullname "project-secret-manager-be-prod" }}
      priorityClassName: system-cluster-critical
      {{- end }}
      nodeSelector:
        Karpenter: enabled
      {{- if eq .Values.criticalService true }}
      tolerations:
        - effect: "NoSchedule"
          key: xquare/criticalService
          operator: "Equal"
          value: "true"
      {{- else }}
      tolerations:
        - effect: "NoSchedule"
          key: xquare/server
          operator: "Equal"
          value: "true"
      {{- end }}
      terminationGracePeriodSeconds: 120
      containers:
        - name: {{ $fullname }}
          image: {{ $ecrRegistry }}/{{ $namespace }}/{{ .Values.name }}:{{ .Values.imageTag }}
          env:
            - name: DD_PROFILING_ENABLED
              value: "true"
            - name: DD_LOGS_INJECTION
              value: "true"
            - name: DD_APPSEC_ENABLED
              value: "true"
            - name: DD_IAST_ENABLED
              value: "true"
            - name: DD_APPSEC_SCA_ENABLED
              value: "true"
            - name: DD_TRACE_SAMPLE_RATE
              value: "1"

          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.containerPort }}
          envFrom:
            - secretRef:
                name: {{ $fullname }}
                optional: true
          resources:
            {{- if eq .Values.instanceType "x3.nano" }}
            requests:
              cpu: "1m"
              memory: "20Mi"
            limits:
              memory: "30Mi"
            {{- else if eq .Values.instanceType "x3.micro" }}
            requests:
              cpu: "2m"
              memory: "100Mi"
            limits:
              memory: "150Mi"
            {{- else if eq .Values.instanceType "x3.small" }}
            requests:
              cpu: "4m"
              memory: "250Mi"
            limits:
              memory: "400Mi"
            {{- else if eq .Values.instanceType "x3.medium" }}
            requests:
              cpu: "7m"
              memory: "600Mi"
            limits:
              memory: "800Mi"
            {{- else if eq .Values.instanceType "x3.large" }}
            requests:
              cpu: "10m"
              memory: "1Gi"
            limits:
              memory: "1.5Gi"
            {{- else }}
            requests:
              cpu: "1m"
              memory: "20Mi"
            limits:
              memory: "30Mi"
            {{- end }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.containerPort }}
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 3
{{- end }}
