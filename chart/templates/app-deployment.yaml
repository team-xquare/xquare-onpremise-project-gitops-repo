{{- range .Values.applications }}
{{- if .github.hash }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.serviceName" . }}
  namespace: {{ include "project.namespace" $ }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
    app.kubernetes.io/component: application
spec:
  minReadySeconds: 5
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "app.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: application
      annotations:
        {{- if .endpoints }}
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "{{ (index .endpoints 0).port }}"
        {{- end }}
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      serviceAccountName: {{ include "project.vaultServiceAccount" $ }}
      terminationGracePeriodSeconds: 60
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - {{ include "app.serviceName" . }}
                topologyKey: kubernetes.io/hostname
      containers:
        - name: {{ include "app.serviceName" . }}
          image: {{ include "project.harborRegistry" $ }}/xquare/{{ $.Values.project }}-{{ include "app.serviceName" . }}:{{ .github.hash | default "latest" }}
          imagePullPolicy: Always
          {{- if .endpoints }}
          ports:
          {{- range $endpoint := .endpoints }}
            - containerPort: {{ $endpoint.port }}
              protocol: TCP
          {{- end }}
          env:
            - name: PORT
              value: "{{ (index .endpoints 0).port }}"
          {{- end }}
          envFrom:
            - secretRef:
                name: {{ include "app.vaultSecretName" (dict "project" $.Values.project "name" (include "app.serviceName" .)) }}
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              memory: 256Mi
          {{- if .endpoints }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 25"]
          startupProbe:
            tcpSocket:
              port: {{ (index .endpoints 0).port }}
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 30
          readinessProbe:
            tcpSocket:
              port: {{ (index .endpoints 0).port }}
            initialDelaySeconds: 0
            periodSeconds: 3
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 2
          livenessProbe:
            tcpSocket:
              port: {{ (index .endpoints 0).port }}
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          {{- end }}
      imagePullSecrets:
        - name: {{ include "app.serviceName" . }}-imagepullsecrets
{{- end }}
{{- end }}