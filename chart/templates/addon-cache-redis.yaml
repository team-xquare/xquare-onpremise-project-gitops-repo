{{- range .Values.addons }}
{{- if eq .type "redis" }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "addon.serviceName" . }}
  namespace: {{ include "project.namespace" $ }}
  labels:
    {{- include "addon.labels" . | nindent 4 }}
    app.kubernetes.io/component: service
spec:
  selector:
    {{- include "addon.selectorLabels" . | nindent 4 }}
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
      name: redis
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "addon.name" . }}-data
  namespace: {{ include "project.namespace" $ }}
  labels:
    {{- include "addon.labels" . | nindent 4 }}
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .storage }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "addon.name" . }}
  namespace: {{ include "project.namespace" $ }}
  labels:
    {{- include "addon.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  serviceName: {{ include "addon.serviceName" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "addon.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "addon.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: redis
          image: redis:7.0-alpine
          ports:
            - containerPort: 6379
              name: redis
          command:
            - redis-server
            - --save
            - "60 1"
            - --dir
            - "/data"
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              memory: 256Mi
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "addon.name" . }}-data
{{- end }}
{{- end }}