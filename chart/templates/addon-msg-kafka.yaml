{{- range .Values.addons }}
{{- if eq .type "kafka" }}
---
# Zookeeper Service
apiVersion: v1
kind: Service
metadata:
  name: {{ include "addon.name" . }}-zookeeper
  namespace: {{ include "project.namespace" $ }}
  labels:
    {{- include "addon.labels" . | nindent 4 }}
    app.kubernetes.io/component: zookeeper
spec:
  selector:
    {{- include "addon.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: zookeeper
  ports:
    - port: 2181
      targetPort: 2181
      name: client
    - port: 2888
      targetPort: 2888
      name: follower
    - port: 3888
      targetPort: 3888
      name: election
  type: ClusterIP
---
# Zookeeper PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "addon.name" . }}-zookeeper-data
  namespace: {{ include "project.namespace" $ }}
  labels:
    {{- include "addon.labels" . | nindent 4 }}
    app.kubernetes.io/component: zookeeper-storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# Zookeeper StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "addon.name" . }}-zookeeper
  namespace: {{ include "project.namespace" $ }}
  labels:
    {{- include "addon.labels" . | nindent 4 }}
    app.kubernetes.io/component: zookeeper
spec:
  serviceName: {{ include "addon.name" . }}-zookeeper
  replicas: 1
  selector:
    matchLabels:
      {{- include "addon.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: zookeeper
  template:
    metadata:
      labels:
        {{- include "addon.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: confluentinc/cp-zookeeper:7.4.0
          ports:
            - containerPort: 2181
              name: client
            - containerPort: 2888
              name: follower
            - containerPort: 3888
              name: election
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"
            - name: ZOOKEEPER_SERVER_ID
              value: "1"
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - name: data
              mountPath: /var/lib/zookeeper/data
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "echo ruok | nc localhost 2181 | grep imok"
            initialDelaySeconds: 30
            periodSeconds: 10
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "addon.name" . }}-zookeeper-data
---
# Kafka Service
apiVersion: v1
kind: Service
metadata:
  name: {{ include "addon.serviceName" . }}
  namespace: {{ include "project.namespace" $ }}
  labels:
    {{- include "addon.labels" . | nindent 4 }}
    app.kubernetes.io/component: service
spec:
  selector:
    {{- include "addon.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: kafka
  ports:
    - port: 9092
      targetPort: 9092
      name: kafka
  type: ClusterIP
---
# Kafka PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "addon.name" . }}-data
  namespace: {{ include "project.namespace" $ }}
  labels:
    {{- include "addon.labels" . | nindent 4 }}
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .storage }}
---
# Kafka StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "addon.name" . }}
  namespace: {{ include "project.namespace" $ }}
  labels:
    {{- include "addon.labels" . | nindent 4 }}
    app.kubernetes.io/component: kafka
spec:
  serviceName: {{ include "addon.serviceName" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "addon.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: kafka
  template:
    metadata:
      labels:
        {{- include "addon.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: kafka
    spec:
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:7.4.0
          ports:
            - containerPort: 9092
              name: kafka
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "{{ include "addon.name" . }}-zookeeper:2181"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://{{ include "addon.serviceName" . }}.{{ include "project.namespace" $ }}.svc.cluster.local:9092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
          resources:
            {{- include "addon.resources" . | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/kafka/data
          readinessProbe:
            exec:
              command:
                - kafka-broker-api-versions
                - --bootstrap-server=localhost:9092
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
                - kafka-broker-api-versions
                - --bootstrap-server=localhost:9092
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "addon.name" . }}-data
{{- end }}
{{- end }}