{{- range .Values.addons }}
{{- if eq .type "mysql" }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "addon.serviceName" . }}
  namespace: {{ include "project.namespace" $ }}
  labels:
    {{- include "addon.labels" . | nindent 4 }}
    app.kubernetes.io/component: service
spec:
  selector:
    {{- include "addon.selectorLabels" . | nindent 4 }}
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
      name: mysql
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "addon.name" . }}-data
  namespace: {{ include "project.namespace" $ }}
  labels:
    {{- include "addon.labels" . | nindent 4 }}
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .storage }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "addon.name" . }}
  namespace: {{ include "project.namespace" $ }}
  labels:
    {{- include "addon.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  serviceName: {{ include "addon.serviceName" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "addon.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "addon.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          ports:
            - containerPort: 3306
              name: mysql
          env:
            - name: MYSQL_ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: MYSQL_DATABASE
              value: {{ include "addon.databaseName" . | quote }}
          resources:
            {{- include "addon.resources" . | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "addon.name" . }}-data
{{- end }}
{{- end }}